/* REXX */
/* FIND a Dataset - using volid mask as search criterion */
/*                  "*" searches ALL DASD volumes        */
msg_status = MSG('OFF')
myid=SYSVAR(SYSUID)
parse upper arg dsn vol
volx=1
mydate=date('U')
mytime=time()
CVTSNAME   = D2X(C2d(Storage(10,4)) + 340)      /* Point to CVTSNAME */
Sysid      = strip(Storage(CVTSNAME,8))         /* SYSID             */
cylpri=20                                       /* rpt file size-pri */
cylsec=20                                       /* rpt file size-sec */
/*================ M A I N L I N E ======================*/
call getargs           /* secure dsname/volid mask       */
call cleanup           /* cleanup temp datasets          */
call allocate          /* allocate DCOLLECT ds's         */
call bldinput          /* build DCOLLECT input stmnts    */
call dcollect          /* execute DCOLLECT               */
call scan              /* read DCOLLECT output           */
call bldoutput         /* build volser output            */
call view              /* view report                    */
call cleanup2          /* cleanup temp datasets          */
call goodbye           /* issue parting message          */
exit
/*=================S U B R O T I N E S ==================*/
/*================ OBTAIN DSNAME AND VOLID MASK =========*/
GETARGS:
  maskdsn=strip(dsn,b," ")
  maskdsn=strip(maskdsn,b,"'")
  if maskdsn /= '' then
    do
      if maskdsn = '?' then
        signal showucbs
      x=SYSDSN(dsn)
      if pos('INVALID',x) /= 0 then
        do
          say 'Dsname invalid ...'
          dsn = ''
        end
    end
  if dsn = '' then
    do forever
      say 'Enter Dataset name to search (1-44 chars), partial is OK'
      parse upper pull dsn
      maskdsn=strip(dsn,b," ")
      maskdsn=strip(maskdsn,b,"'")
      if maskdsn = '?' then
        signal showucbs
      x=SYSDSN(maskdsn)
      if pos('INVALID',x) /= 0 then
        iterate
      else
        leave
    end
  if vol = '' then
    do forever
     say 'Enter VOL mask (1-6 chars), partial is OK ("*" for ALL DASD)'
      parse upper pull vol
      maskvol=strip(vol,b," ")
      if maskvol /= '' then
          leave
    end
  else
    maskvol=vol
  dsnlen=length(maskdsn)
  vollen=length(maskvol)
  maskvol2=maskvol
  if maskvol /= '*' then
    if vollen < 6 then
      maskvol2=maskvol||'*'
  if maskvol2='*' then
    do forever
      say 'You are asking to search ALL volumes. Are you sure ? (Y/N)'
      parse upper pull YN
      if YN /= 'N' then
        if YN /= 'Y' then
          do
            say '-- RESPONSE invalid --'
            say ' '
            iterate
          end
      if yn = 'N' then
        do
          call cleanup
          call goodbye
          exit
        end
      else
        do
          cylpri=200   /* enlarge rpt size when asking for all dasd */
          cylsec=200
          leave
        end
    end
return
/* =================== ALLOCATE DCOLLECT DS =======================*/
ALLOCATE:
  ADDRESS TSO
  "ALLOC F(SYSIN) DA('"myid".DC.SYSIN') SPACE(1,1) TRACKS NEW
         CATALOG REUSE RECFM(F) BLKSIZE(80) UNIT(SYSALLDA)"
  if rc ¬= 0 then
    do
      say DCOLLECT SYSIN ' NOT ALLOCATED .... Check error'
      say 'dataset : 'myid'.DC.SYSIN'
      call cleanup
      exit
    end
  "ALLOC F(SYSPRINT) DA('"myid".DC.SYSPRINT') SPACE(2,1) CYLINDERS
     NEW CATALOG REUSE RECFM(F) BLKSIZE(133) UNIT(SYSALLDA)"
  if RC ¬= 0 then
    do
      say 'DCOLLECT SYSPRINT dataset allocation error !'
      say 'dataset : 'myid'.DC.SYSPRINT'
      call cleanup
      exit
    end
  "ALLOC F(DCOUT) DA('"myid".DC.DCOUT') SPACE("cylpri","cylsec")
     cylinders NEW CATALOG REUSE RECFM(V,B) LRECL(768) BLKSIZE(27998)
     UNIT(SYSALLDA)"
  if RC ¬= 0 then
    do
      say 'DCOLLECT OUTPUT dataset allocation error !'
      say 'dataset : 'myid'.DC.DCOUT'
      call cleanup
      exit
    end
  "ALLOC F(REPORT) DA('"myid".DC.REPORT') SPACE(1,1) CYLINDERS
     NEW CATALOG REUSE RECFM(F,B) LRECL(80) BLKSIZE(7200)
     UNIT(SYSALLDA)"
  if RC ¬= 0 then
    do
      say 'REPORT OUTPUT dataset allocation error !'
      say 'dataset : 'myid'.DC.REPORT'
      call cleanup
      exit
    end
return
/* =================== BUILD/WRITE DCOLLECT INPUT =================*/
BLDINPUT:
  d.1 ='  DCOLLECT -'
  d.2 ='       OUTFILE(DCOUT) -'
  d.3 ='       VOLUMES( -'
  d.4 ='               ' maskvol2 ' -'
  d.5 ='               )'
  "EXECIO * DISKW SYSIN (STEM d. FINIS"
return
/* =================== EXEC DCOLLECT ==============================*/
DCOLLECT:
  ADDRESS TSO "CALL 'SYS1.LINKLIB(IDCAMS)'"
  if RC > 4 then
    do
      say 'DCOLLECT error ! RC='rc
      "ISPEXEC BROWSE DATASET('"myid".DC.SYSPRINT')"
      call cleanup
      exit
    end
return
/* =================== SCAN DCOLLECT OUTPUT =======================*/
SCAN:
  vl=1
  #vols=0
  rc=0
  say ' S C A N N I N G . . .'
  say ' P l e a s e   W a i t'
  do while RC=0
    "EXECIO 1 DISKR DCOUT"
    if rc /=0 then
      do
        "EXECIO 0 DISKR DCOUT (FINIS"
        leave
      end
    PULL RECORD
    if substr(RECORD,5,1)   = 'V' then
      do
        hotvol=substr(RECORD,25,6)
        #vols=#vols+1
        call storvols
        iterate
      end
    if substr(RECORD,5,1)  = 'D'  then
      do
        if substr(RECORD,25,dsnlen) = maskdsn then
          do
            hotdsn=substr(record,25,44)
            rec.vl=hotvol||hotdsn
            vl=vl+1
          end
      end
  end
return
/* =================== Store VOLIDS ===============================*/
STORVOLS:
  do x=1 to volx by 1
    if voltb.volx = hotvol then return
  do
    voltb.volx=hotvol
    volx=volx+1
  end
  return
/* =================== BUILD FINAL OUTPUT =========================*/
BLDOUTPUT:
  if vl=1 then
    do
      say '*========================================================'
      say '* NO hits for :'
      say '*              DSN ='dsn
      say '*              MASK='vol
      say '*========================================================'
      say 'Do you wish to see ALL AVAIL VOLSERS in the system ? (Y/N)'
      do forever
        parse upper pull YN
        if YN /= 'Y' then
        if YN /= 'N' then
          do
            say '-- RESPONSE invalid --'
            say ' '
            iterate
          end
        if yn = 'Y' then
          do
            call showucbs  /* ucb scan/display */
            return
          end
        call cleanup
        exit
      end
    end
/*=========*/
  pt.1 = '**************************************************************'
  pt.2 = '* -'Sysid'-                                   'mydate'  'mytime
  pt.3 = '* Search target  : 'dsn
  pt.4 = '* Search mask    : 'vol
  pt.5 = '**************************************************************'
  pt.6 = ' '
  ptx=6
  voltbx=1
  totvols=#vols
  #lines=#vols/6
  #lines=format(#lines,4,0)
  if #lines = 0 then #lines = 1
  sfx='Volumes Searched : '
  do x = 1 to #lines by 1        /* outer */
    vlx=#vols-6
    if vlx < 1 then
      vlx=#vols
    else
      vlx=6
    do y = 1 to vlx by 1        /* inner */
      sfx=sfx || substr(voltb.voltbx,1,6) || ' '
      voltbx=voltbx+1
    end
    ptx=ptx+1
    pt.ptx=sfx
    sfx='                   '
    #vols=#vols-6
  end
  ptx=ptx+1
  pt.ptx = ' '
  ptx=ptx+1
  pt.ptx = 'NO. Dataset Hits : 'vl-1
  ptx=ptx+1
  pt.ptx = 'NO. Vols Scanned : 'totvols
  ptx=ptx+1
  pt.ptx = ' '
  ptx=ptx+1
  pt.ptx = 'VOLUME  CTLGD ?  DSNAME'
  ptx=ptx+1
  pt.ptx = '------  -------  ------'
  rp=ptx
  vl=vl-1
  do x1=1 to vl by 1
    ptvol=substr(rec.x1,1,6)
    ptdsn=strip(substr(rec.x1,7,44))
    ptdsn="'"||ptdsn
    ptdsn=ptdsn||"'"
    rc=listdsi(ptdsn)
    if sysreason = 0 then
      ptcat='  Y    '
    else
      ptcat='  N    '
    rp=rp+1
    pt.rp = ptvol  ' ' ptcat   ptdsn
  end
return
/* =================== VIEW Report ================================*/
VIEW:
  address TSO
  'EXECIO  *  DISKW REPORT (STEM pt. FINIS)'
  "ISPEXEC BROWSE DATASET('"myid".DC.REPORT')"
return
/* =================== CLEANUP FILES ==============================*/
CLEANUP:
  address TSO
  "FREE FI(SYSIN,SYSPRINT,DCOUT,REPORT)"
  "DELETE ('"myid".DC.SYSIN')"
  "DELETE ('"myid".DC.SYSPRINT')"
  "DELETE ('"myid".DC.DCOUT')"
  "DELETE ('"myid".DC.REPORT')"
return
/* =================== CLEANUP FILES (minus report) ===============*/
CLEANUP2:
  address TSO
  "FREE FI(SYSIN,SYSPRINT,DCOUT,REPORT)"
  "DELETE ('"myid".DC.SYSIN')"
  "DELETE ('"myid".DC.SYSPRINT')"
  "DELETE ('"myid".DC.DCOUT')"
return
/* =================== CLEANUP FILES ==============================*/
GOODBYE:
  say ' '
  say ' '
  say '***'
  say 'REXX Complete'
return
/* ///////////////////////////////////////////////////////////////////// */
/* ///////////////////////////////////////////////////////////////////// */
SHOWUCBS:
  /* Display all dasd volids */
  address ispexec
  ADDRESS TSO
    "FREE FI(ERRORS,VOLSERS)"
    "DELETE ('"myid".UCB.ERRORS')"
    "DELETE ('"myid".UCB.VOLSERS')"
    "ALLOC FI(ERRORS) DA('"myid".UCB.ERRORS') NEW CATALOG
           SPACE(1,1) TRACKS RECFM(F) BLKSIZE(80)"
    "ALLOC FI(VOLSERS) DA('"myid".UCB.VOLSERS') NEW CATALOG
           SPACE(2,1) TRACKS RECFM(F) BLKSIZE(80)"
/*=================== P O S S I B L E  C H A N G E ===========================*/
  ADDRESS LINKPGM "TSOUCB"  /* use this if TSOUCB in LINKLIST*/
/*ADDRESS TSO "CALL 'Your.LOADLIB(TSOUCB)'" use this if TSOUCB not in linklist*/
/*=================== P O S S I B L E  C H A N G E ===========================*/
  if rc = 0 then
    "ISPEXEC BROWSE DATASET('"myid".UCB.VOLSERS')"
  else
    "ISPEXEC BROWSE DATASET('"myid".UCB.ERRORS')"
  "DELETE ('"myid".UCB.ERRORS')"
  "DELETE ('"myid".UCB.VOLSERS')"
  "FREE FI(VOLSERS,ERRORS)"
exit
