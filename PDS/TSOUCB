*=====================================================================*
* TSOUCB : INPUT  = NONE                                              *
*          OUTPUT = DATASET W/ ALL AVAILABLE VOLSERS (SORTED)         *
*                                                                     *
*          2 DD'S MUST BE ALLOCATED PRIOR TO PGM ENTRY :              *
*            "ERRORS" : REPORTS ANY UNTOWARD ACTIVITY                 *
*            "VOLSERS": VOLSER REPORT                                 *
*                                                                     *
* THIS CAN BE EXPANDED TO PLACE OTHER INFO BESIDES THE VOLSERS INTO   *
* THE PRINT LINES.                                                    *
*                                                                     *
* UPDATE:  01/30/20 - SAM GOLOB                                       *
*          MADE DCB'S HAVE LRECL=80 TO AVOID GARBAGE ON A LINE,       *
*          IF THE ALLOCATED LINE WAS WIDER THAN 80 BYTES.             *
*=====================================================================*
TSOUCB   CSECT
         USING *,R15
         B     AROUND
         DC    AL1(23)
         DC    CL9'&SYSDATE'
         DC    CL5'&SYSTIME'
AROUND   DS    0H
         STM   R14,R12,12(R13)
         ST    R13,SAVEAREA+4
         LA    R7,SAVEAREA
         ST    R7,8(R13)
         LA    R13,SAVEAREA
         DROP  R15
         USING SAVEAREA,R13
         B     BEGIN
SAVEAREA DC    18F'0'
BEGIN    DS    0H
         L     R3,CORE                 R5 ==> GETMAIN SIZE
         GETMAIN EC,LV=(R3),A=AUCBS    GET STORAGE
         LTR   R15,R15                 CORE AQUIRED ?
         BNZ   MAINERR                 NOPE...
         L     R5,16(R0)               R5 ==> A(CVT)
         USING CVT,R5
         MVC   MYSYSID(4),CVTSNAME     SAVE SYSID
         DROP  R5
         L     R4,AUCBS                R4 ==> A(GETMAINED AREA)
         LR    R6,R4                   R6 DITTO
         AR    R4,R3                   R4 ==> A(END GETMAIN AREA)
         BCTR  R4,0                    -1
         ST    R4,ATOOFAR              SAVE IT
         LA    R5,UCBAREA              DSECT THE UCB
         USING UCB,R5
         SR    R9,R9                   VOLID CTR
UCBLOOP  EQU   *
         PRINT NOGEN
         UCBSCAN COPY,WORKAREA=UCBWORK,UCBAREA=UCBAREA,DEVN=0,         X
               DYNAMIC=YES,RANGE=ALL,DEVCLASS=DASD
         PRINT GEN
         LTR   R15,R15                 SCAN END ?
         BNZ   SCANEND                 YES..END OF SCAN
         C     R6,ATOOFAR              BUSTING OUT OF GETMAIN ?
         BNL   TOOMANY                 YUP...ERR
         CLI   UCBVOLI,C'A'            VALID VOLSER ?
         BL    UCBLOOP                 NO..DROP UCB
         MVC   0(6,R6),UCBVOLI         SAVE VOLSER
         DROP  R5
         LA    R9,1(R9)                BUMP CTR
         LA    R6,6(R6)                BUMP TO NEXT SLOT
         B     UCBLOOP                 RETURN TO CALL NEXT UCB
         SPACE 3
SCANEND  EQU   *
         ST    R6,AEND                 SAVE A(LASTVOLSER+6)
         ST    R9,#VOLIDS              SAVE #VOLIDS
***
* ALL UCB VOLSERS OBTAINED
* SORT VOLSERS BY ASCENDING ORDER
***
STRTSORT EQU   *
         LM    R3,R5,SORTPTRS
         MVC   0(6,R5),=8C'9'
         SR    R5,R4
BUBBLOOP EQU   *
         LR    R2,R3
EXCHLOOP EQU   *
         CLC   0(6,R3),6(R2)         BUBBLE SORT
         BNH   ENDEXCH               *
         MVC   SORTNAME(6),0(R3)     *
         MVC   0(6,R3),6(R2)         *
         MVC   6(6,R2),SORTNAME      *
ENDEXCH  EQU   *
         BXLE  R2,R4,EXCHLOOP
         BXLE  R3,R4,BUBBLOOP
         SPACE
***
* WRITE VOLSERS TO DS
***
         SPACE
         OPEN  (VOLSERS,(OUTPUT))
         L     R6,AUCBS                R1=A(GETMAIN/VOLIDS)
         L     R5,#VOLIDS              R5=#ENTRIES
         LA    R7,5                    R7=#ENTRIES PER PT LINE
         LA    R8,WORKA+1              R8=A(PT LINE)
         CVD   R5,DOUB
         MVC   TITLE+28(L'MASK),MASK
         ED    TITLE+28(L'MASK),DOUB+5
         BAL   R11,TOF                 HEADERS
*
         LA    R7,10                   R7=#ENTRIES PER PT LINE
INNERS   EQU   *
         MVC   0(6,R8),0(R6)           VOL TO PT LINE
         LA    R6,6(R6)                BUMP VOL PTR
         LA    R8,8(R8)                BUMP PT LINE PTR
         BCT   R5,OUTERS               WHEN > 0 BRANCH
         B     FINAL                   WHEN = 0 ... EXIT
OUTERS   EQU   *
         BCT   R7,INNERS               FILL PT LINE
         BAL   R11,WRITEIT             WRITE PT LINE
         CP    LINECNT,=P'60'          60 LINES PRINTED ?
         BL    SAMEPGS                 NO
         BAL   R11,TOF                 YES..DO TOF
SAMEPGS  EQU   *
         LA    R7,10                   RELOAD PT CTR
         LA    R8,WORKA+1              R7=A(PT LINE)
         B     INNERS                  START PT FOR NXT LINE
         B     EXIT
FINAL    EQU   *                       NO MO UCB'S
         BAL   R11,WRITEIT             WRITE PT LINE
         CLOSE (VOLSERS)
         XC    RC,RC                   SET RC0
         B     EXIT
         SPACE
EXIT     EQU   *
         FREEMAIN EU,LV=60000,A=AUCBS
         L     R15,RC
         L     R13,SAVEAREA+4
         RETURN (14,12),RC=(15)        RC IN R15
         LTORG
         SPACE 5
***
* TOF - TOP OF FORMS
***
         SPACE
         DC    CL8'TOF',F'0'
TOF      ST    R11,TOF-4
         BAL   R11,WRITEIT
         MVC   WORKA(L'DASHES),DASHES
         BAL   R11,WRITEIT
         MVC   WORKA(L'TITLE),TITLE
         BAL   R11,WRITEIT
         MVC   WORKA(L'DASHES),DASHES
         BAL   R11,WRITEIT
         BAL   R11,WRITEIT
         ZAP   LINECNT,=P'5'
         L     R11,TOF-4
         BALR  R11,R11
         SPACE 3
***
* WRITEIT - WRITE VOLID INFO
***
         SPACE
         DC    CL8'WRITEIT',F'0'
WRITEIT  ST    R11,WRITEIT-4
         PUT   VOLSERS,WORKA
         MVC   WORKA+1(79),WORKA         CLEAR PT LINE
         AP    LINECNT,=P'1'
         L     R11,WRITEIT-4
         BALR  R11,R11
         SPACE 3
***
* MAINERR - GETMAIN ERROR
***
         SPACE
         DC    CL8'MAINERR',F'0'
MAINERR  ST    R11,MAINERR-4
         ST    R15,RC
         OPEN  (ERRORS,(OUTPUT))
         CVD   R15,DOUB                  RC
         UNPK  ERR1+17(4),DOUB+5(3)
         OI    ERR1+20,X'F0'
         MVC   WORKA(L'ERR1),ERR1
         PUT   ERRORS,WORKA
         MVC   RC(4),=F'12'
         CLOSE (ERRORS)
         B     EXIT
         SPACE 3
***
* TOOMANY - TOO MANY UCB'S IN THE SYSTEM FOR OUR TABLE
***
         SPACE
TOOMANY  EQU   *
         OPEN  (ERRORS,(OUTPUT))
         MVC   WORKA(L'ERR2),ERR2
         PUT   ERRORS,WORKA
         CLOSE (ERRORS)
         MVC   RC(4),=F'12'
         B     EXIT
         SPACE 3
         LTORG
         EJECT
*=====================================================================*
*                         W O R K  A R E A S                          *
*=====================================================================*
         SPACE
UCBWORK  DC    XL100'00'
UCBAREA  DS    CL48
LINECNT  DC    PL2'0'
MASK     DC    X'402020202120'
TRTAB    DC    C'0123456789ABCDEF'
ERR1     DC    C' GETMAIN ERR,R15=XXXX'
ERR2     DC    C' # UCBS EXCEEDS PROGRAM''S TABLE SIZE ... ENLARGE'
DASHES   DC    C' ************'
TITLE    DC    C' *          *  NO. VOLIDS  :XXXXXX'
         ORG   TITLE+3
MYSYSID  DS    CL8
         ORG
CORE     DC    F'60000'     GETMAIN SIZE (MAX=10000 UCB'S)
RC       DC    F'0'
WORKA    DC    CL80' '
DOUB     DS    D
ATOOFAR  DS    A
*
SORTPTRS DS    0D
AUCBS    DS    A     R3
NAMELEN  DC    F'6'  R4
AEND     DS    A     R5
#VOLIDS  DC    F'0'
SORTNAME DC    CL6' '
*
         DS   0D
         PRINT NOGEN
ERRORS   DCB  DDNAME=ERRORS,DSORG=PS,MACRF=PM,LRECL=80
VOLSERS  DCB  DDNAME=VOLSERS,DSORG=PS,MACRF=PM,LRECL=80
         SPACE 5
*=====================================================================*
*                            D S E C T S                              *
*=====================================================================*
         SPACE 3
UCB      DSECT
         IEFUCBOB
MYCVT    CVT   DSECT=YES,LIST=YES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
